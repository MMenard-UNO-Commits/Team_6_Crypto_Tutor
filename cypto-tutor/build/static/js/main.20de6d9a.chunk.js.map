{"version":3,"sources":["components/DisplayQuestions.js","components/Dashboard.js","components/Preferences.js","ContextAPI.js","components/QuestionPage.js","components/NotFound.js","components/Results.js","components/Hook.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayQuestions","props","style","border","width","for","id","question","username","size","dateTime","codeFragment","Dashboard","useState","users","setUsers","setUsername","query","setQuery","questions","setQuestions","questionMap","setQuestionMap","event","a","preventDefault","data","FormData","append","fetch","method","body","response","json","pulledQuestions","map","console","log","test","tmpArray","value","label","i","length","push","useEffect","pullUsers","Form","onSubmit","htmlFor","type","name","onChange","e","target","Group","controlID","Label","options","Preferences","ContextAPI","createContext","CheckboxesProvider","parsedArray","setParsedArray","code1","setCode1","code2","setCode2","past","setPast","selectedCodeFragment1","setSelectedCodeFragment1","selectedCodeFragment2","setSelectedCodeFragment2","Provider","children","QuestionPage","setusername","student_id","setStudent_id","setQuestion","setCodeFragment","useContext","history","useHistory","ques","headers","JSON","stringify","text","finalText","concat","parser","DOMParser","doc","parseFromString","parsed2","getElementsByTagName","array","innerText","className","controlId","Control","autoFocus","placeholder","Button","disabled","NotFound","Results","dangerouslySetInnerHTML","__html","Hook","oldValue","newValue","splitView","App","Navbar","collapseOnSelect","bg","expand","to","Brand","Toggle","Collapse","Nav","activeKey","window","location","pathname","Link","onClick","localStorage","clear","reload","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20de6d9a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./DisplayQuestions.css\"\r\n\r\nexport default function DisplayQuestions(props) {\r\n\r\n    return (\r\n        <div style={{border: \"3px solid black\",\r\n                     width: \"40%\"}}>\r\n            <label for=\"username\">Username:</label>\r\n            <div id=\"username\">\r\n                {props.question.username}\r\n            </div>\r\n            <hr size=\"4\"/>\r\n            <label for=\"dateTime\">Date and Time of Submission:</label>\r\n            <div id=\"dateTime\">\r\n                {props.question.dateTime}\r\n            </div>\r\n            <hr size=\"4\"/>\r\n            <label for=\"question\">Question:</label>\r\n            <div id=\"question\">\r\n                <pre>{props.question.question}</pre>\r\n            </div>\r\n            <hr size=\"4\"/>\r\n            <label for=\"codeFragment\">Code Fragment:</label>\r\n            <div id=\"codeFragment\">\r\n                <pre>{props.question.codeFragment}</pre>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Select from \"react-select\";\r\nimport DisplayQuestions from \"./DisplayQuestions\";\r\n\r\nexport default function Dashboard() {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [questionMap, setQuestionMap] = useState();\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"query\", query);\r\n    data.append(\"user\", username);\r\n    const response = await fetch(\"http://104.131.172.9:8080/back-end/question/getFilteredQuestions\", {\r\n      method: \"POST\",\r\n      body: data\r\n    });\r\n    const pulledQuestions = await response.json();\r\n    setQuestions(pulledQuestions);\r\n    setQuestionMap(questions.map(question => <DisplayQuestions question={question} />));\r\n    console.log(username);\r\n    console.log(query);\r\n    console.log(questions);\r\n    console.log(DisplayQuestions);\r\n\r\n\r\n  }\r\n\r\n  async function pullUsers(){\r\n    const response = await fetch(\"http://104.131.172.9:8080/users-test/user/getStudents\");\r\n    const test = await response.json();\r\n    console.log(test);\r\n    let tmpArray = [{value: \"\", label:\"None\"}];\r\n    for (var i = 0; i < test.length; i++) {\r\n      tmpArray.push({value: test[i], label: test[i]});\r\n    }\r\n    setUsers(tmpArray);\r\n  }\r\n  //fetch the array of users when the component is loaded.\r\n  useEffect(() => {\r\n    pullUsers();\r\n    console.log(users);\r\n    console.log(username);\r\n    console.log(query);\r\n  })\r\n\r\n    return(\r\n      <div key=\"html\">\r\n      <h2 key=\"heading\"> Dashboard </h2>\r\n      <Form onSubmit = {handleSubmit}>\r\n        <label key=\"label1\" htmlFor=\"query\"> Query:</label>\r\n        <input key=\"input1\" type=\"text\" id=\"query\" name=\"query\" onChange={(e) => {setQuery(e.target.value)}}>\r\n\r\n        </input>\r\n      <Form.Group size=\"lg\" controlID=\"user\">\r\n        <Form.Label>Select Username:</Form.Label>\r\n        <Select options={users} \r\n                onChange={(e) => {setUsername(e.value)}}\r\n                />\r\n      </Form.Group>\r\n        <input type=\"submit\" value=\"submit\"></input>\r\n      </Form>\r\n      <div>\r\n        {questionMap}\r\n      </div>\r\n      </div>\r\n    );\r\n}","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","\r\n   \r\nimport React, { createContext, useState } from \"react\";\r\n\r\nexport const ContextAPI = createContext();\r\n\r\nexport const CheckboxesProvider = (props) => {\r\n  const [parsedArray, setParsedArray] = useState([]);\r\n  const [code1, setCode1] = useState(\"\");\r\n  const [code2, setCode2] = useState(\"\");\r\n\r\n  const [past, setPast] = useState(\"\");\r\n  const [selectedCodeFragment1, setSelectedCodeFragment1] = useState(\"\");\r\n  const [selectedCodeFragment2, setSelectedCodeFragment2] = useState(\"\");\r\n  // const [text, setText] = useState({\r\n  //   selectedCodeFragment1: \"\",\r\n  //   selectedCodeFragment2: \"\",\r\n  // });\r\n\r\n  return (\r\n    <ContextAPI.Provider\r\n      value={{\r\n        selectedCodeFragment1,\r\n        setSelectedCodeFragment1,\r\n        selectedCodeFragment2,\r\n        setSelectedCodeFragment2,\r\n        parsedArray,\r\n        setParsedArray,\r\n        past,\r\n        setPast,\r\n        code1,\r\n        code2,\r\n        setCode1,\r\n        setCode2,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContextAPI.Provider>\r\n  );\r\n};","import React, { useState, useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ContextAPI } from \"../ContextAPI\";\r\nimport \"./QuestionPage.css\"\r\n\r\nexport default function QuestionPage() {\r\n  const [username, setusername] = useState(\"\");\r\n  const [student_id, setStudent_id] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [codeFragment, setCodeFragment] = useState(\"\");\r\n  const { setPast } = useContext(ContextAPI);\r\n\r\n  const { parsedArray, setParsedArray } = useContext(ContextAPI);\r\n\r\n  let history = useHistory();\r\n\r\n  function validateForm() {\r\n    return (\r\n      username.length > 0 &&\r\n      student_id.length > 0 &&\r\n      question.length > 0 &&\r\n      codeFragment.length > 0\r\n    );\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(\"form submitted\");\r\n    const ques = { username, student_id, question, codeFragment };\r\n    const response = await fetch(\r\n      \"http://104.131.172.9:8080/back-end/question/add\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(ques),\r\n      }\r\n    );\r\n    var text = await response.text();\r\n    var script =\r\n      '<script language=\"JavaScript\">' +\r\n      \"function ShowHide(divId) {\" +\r\n      \"if(document.getElementById(divId).style.display == 'none') {\" +\r\n      \"document.getElementById(divId).style.display='block';\" +\r\n      \"} else {\" +\r\n      \"document.getElementById(divId).style.display = 'none';\" +\r\n      \"}\" +\r\n      \"}\" +\r\n      \"</script>\";\r\n    var finalText = text.concat(script);\r\n    setPast(finalText);\r\n\r\n    const parser = new DOMParser();\r\n\r\n    const doc = parser.parseFromString(finalText, \"text/html\");\r\n    const parsed2 = doc.getElementsByTagName(\"div\");\r\n    console.log(parsed2.length);\r\n    let array = [];\r\n\r\n    for (let i = 0; i < parsed2.length; i++) {\r\n      array[i] = parsed2[i].innerText;\r\n    }\r\n    console.log(array.length)\r\n    setParsedArray(array);\r\n    console.log(parsedArray);\r\n\r\n    // console.log(doc);\r\n\r\n    // setPast(finalText);\r\n    // let array = [];\r\n\r\n    // let parsed = $(finalText).find(\"div\").toArray;\r\n    // console.log(parsed[0]);\r\n\r\n    // for (let i = 0; i < parsed.length; i++) {\r\n    //   array[i] = parsed[i].innerText;\r\n    //   console.log(array[i]);\r\n    // }\r\n    // setParsedArray(array[0]);\r\n\r\n    // console.log(array.length);\r\n    // console.log(array[0]);\r\n    //setParsedArray(parsedArray.concat(\"My name is Milan\"));\r\n    //setParsedArray((parsedArray) => [...parsedArray, parsed[0]]);\r\n\r\n    //console.log(parsedArray.array[0]);\r\n    //console.log(parsedArray);\r\n    //console.log(array.length);\r\n    //console.log(parsed.length);\r\n\r\n    history.push(\"/results\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-3 mb-2 bg-light bg-opacity-20 text-dark\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"ID\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            className=\".form-control-sm\"\r\n            type=\"username\"\r\n            value={username}\r\n            onChange={(e) => setusername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"ID\">\r\n          <Form.Label>Student ID</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"student_id\"\r\n            value={student_id}\r\n            onChange={(e) => setStudent_id(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Question</Form.Label>\r\n          <textarea\r\n            id=\"question\"\r\n            className=\"form-control\"\r\n            type=\"question\"\r\n            placeholder=\"Type a Question\"\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"ID\">\r\n          <Form.Label>Code Fragment</Form.Label>\r\n          <textarea\r\n            id=\"codefragment\"\r\n            className=\"form-control\"\r\n            type=\"description\"\r\n            placeholder=\"Enter code fragment\"\r\n            value={codeFragment}\r\n            onChange={(e) => setCodeFragment(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          className=\"btn btn-info m-3\"\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          disabled={!validateForm()}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound text-center\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\r\nimport { ContextAPI } from \"../ContextAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function Results() {\r\n  const { past } = useContext(ContextAPI);\r\n\r\n  const { setCode1 } = useContext(ContextAPI);\r\n  const { setCode2 } = useContext(ContextAPI);\r\n  let history = useHistory();\r\n  const { selectedCodeFragment1, setSelectedCodeFragment1 } =\r\n    useContext(ContextAPI);\r\n  const { selectedCodeFragment2, setSelectedCodeFragment2 } =\r\n    useContext(ContextAPI);\r\n  const { parsedArray } = useContext(ContextAPI);\r\n\r\n \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setCode1(parsedArray[selectedCodeFragment1 - 1]);\r\n    setCode2(parsedArray[selectedCodeFragment2 - 1]);\r\n\r\n\r\n    history.push(\"/hook\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: past }} />\r\n      <h1>Please Enter the code Fragment Number you would like to compare:</h1>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\">\r\n          <Form.Label>Code Fragment Number</Form.Label>\r\n          <textarea\r\n            autoFocus\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onChange={(e) => setSelectedCodeFragment1(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group size=\"lg\">\r\n          <Form.Label>Code Fragment Number </Form.Label>\r\n\r\n          <textarea\r\n            autoFocus\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onChange={(e) => setSelectedCodeFragment2(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button className=\"btn btn-info m-3\" size=\"lg\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"react-gh-like-diff/dist/css/diff2html.min.css\";\r\nimport ReactDiffViewer from \"react-diff-viewer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ContextAPI } from \"../ContextAPI\";\r\n\r\nfunction Hook() {\r\n  const { code1 } = useContext(ContextAPI);\r\n  const { code2 } = useContext(ContextAPI);\r\n\r\n  return (\r\n    <div>\r\n      <ReactDiffViewer\r\n        oldValue={code1}\r\n        newValue={code2}\r\n        splitView={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hook;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Preferences from \"./components/Preferences\";\r\nimport Question from \"./components/QuestionPage\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Results from \"./components/Results\";\r\nimport { CheckboxesProvider } from \"./ContextAPI\";\r\nimport Hook from \"./components/Hook\";\r\n\r\nfunction App() {\r\n\r\n  //Dummied out login functionality\r\n\r\n  //const { token, setToken } = useToken();\r\n\r\n  //if (!token) {\r\n  //  return <Login setToken={setToken} />; //If not logged in, shows this page until successful login\r\n  //}\r\n  //Add route path to add new page to application\r\n  //If improper route is specified in URL, returns 404 error page\r\n\r\n  //Need better solution for logout button but it works for now\r\n  return (\r\n    <div className=\"App container py-3\">\r\n      <CheckboxesProvider>\r\n        <BrowserRouter>\r\n          <Navbar collapseOnSelect bg=\"light\" expand=\"md\" className=\"mb-3\">\r\n            <LinkContainer to=\"/dashboard\">\r\n              <Navbar.Brand className=\"font-weight-bold text-muted\">CryptoTutor</Navbar.Brand>\r\n            </LinkContainer>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse>\r\n              <Nav activeKey={window.location.pathname}>\r\n                <LinkContainer to=\"/questionpage\">\r\n                  <Nav.Link>Ask Question</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/\">\r\n                  <Nav.Link\r\n                    onClick={() => {\r\n                      localStorage.clear();\r\n                      window.location.reload(false);\r\n                    }}\r\n                  >\r\n                    Log Out\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Switch>\r\n            <Route path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route path=\"/preferences\">\r\n              <Preferences />\r\n            </Route>\r\n            <Route path=\"/questionpage\">\r\n              <Question />\r\n            </Route>\r\n            <Route path=\"/hook\">\r\n              <Hook />\r\n            </Route>\r\n            <Route path=\"/results\">\r\n              <Results />\r\n            </Route>\r\n            <Route>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </CheckboxesProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n//import pull from \"./test.html\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n//const root = document.getElementById('test.html');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}