{"version":3,"sources":["components/DisplayQuestions.js","components/Dashboard.js","components/Preferences.js","ContextAPI.js","components/QuestionPage.js","components/NotFound.js","components/Results.js","components/Hook.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayQuestions","props","style","border","width","for","id","question","username","size","dateTime","codeFragment","Dashboard","useState","users","setUsers","setUsername","query","setQuery","questions","setQuestions","questionMap","setQuestionMap","event","a","preventDefault","data","FormData","append","fetch","method","body","response","json","pulledQuestions","map","test","tmpArray","value","label","i","length","push","useEffect","pullUsers","Form","onSubmit","Group","controlID","Label","className","type","placeholder","onChange","e","target","options","Preferences","ContextAPI","createContext","CheckboxesProvider","parsedArray","setParsedArray","code1","setCode1","code2","setCode2","past","setPast","selectedCodeFragment1","setSelectedCodeFragment1","selectedCodeFragment2","setSelectedCodeFragment2","Provider","children","QuestionPage","setusername","student_id","setStudent_id","setQuestion","setCodeFragment","useContext","history","useHistory","console","log","ques","headers","JSON","stringify","text","finalText","concat","parser","DOMParser","doc","parseFromString","parsed2","getElementsByTagName","array","innerText","controlId","Control","autoFocus","Button","disabled","NotFound","Results","dangerouslySetInnerHTML","__html","Hook","oldValue","newValue","splitView","App","Navbar","collapseOnSelect","bg","expand","to","Brand","Toggle","Collapse","Nav","activeKey","window","location","pathname","Link","onClick","localStorage","clear","reload","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beb56893.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./DisplayQuestions.css\"\n\nexport default function DisplayQuestions(props) {\n\n    return (\n        <div style={{border: \"3px solid black\",\n                     width: \"40%\"}}>\n            <label for=\"username\">Username:</label>\n            <div id=\"username\">\n                {props.question.username}\n            </div>\n            <hr size=\"4\"/>\n            <label for=\"dateTime\">Date and Time of Submission:</label>\n            <div id=\"dateTime\">\n                {props.question.dateTime}\n            </div>\n            <hr size=\"4\"/>\n            <label for=\"question\">Question:</label>\n            <div id=\"question\">\n                <pre>{props.question.question}</pre>\n            </div>\n            <hr size=\"4\"/>\n            <label for=\"codeFragment\">Code Fragment:</label>\n            <div id=\"codeFragment\">\n                <pre>{props.question.codeFragment}</pre>\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Select from \"react-select\";\nimport DisplayQuestions from \"./DisplayQuestions\";\n\nexport default function Dashboard() {\n\n  const [users, setUsers] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [questionMap, setQuestionMap] = useState();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"query\", query);\n    data.append(\"user\", username);\n    const response = await fetch(\"http://104.131.172.9:8080/back-end/question/getFilteredQuestions\", {\n      method: \"POST\",\n      body: data\n    });\n    const pulledQuestions = await response.json();\n    setQuestions(pulledQuestions);\n    setQuestionMap(questions.map(question => <DisplayQuestions question={question} />));\n\n\n  }\n\n  async function pullUsers(){\n    const response = await fetch(\"http://104.131.172.9:8080/users-test/user/getStudents\");\n    const test = await response.json();\n    let tmpArray = [{value: \"\", label:\"None\"}];\n    for (var i = 0; i < test.length; i++) {\n      tmpArray.push({value: test[i], label: test[i]});\n    }\n    setUsers(tmpArray);\n  }\n  //fetch the array of users when the component is loaded.\n  useEffect(() => {\n    pullUsers();\n  })\n\n  function handleUserChange(value) {\n    setUsername(value);\n  }\n\n    return(\n      <div key=\"html\">\n      <h2 key=\"heading\"> Dashboard </h2>\n      <Form onSubmit = {handleSubmit}>\n        <Form.Group size=\"lg\" controlID=\"query\">\n        <Form.Label>Enter Query:</Form.Label>\n          <textarea\n              id=\"question\"\n              className=\"form-control\"\n              type=\"question\"\n              placeholder=\"Type a Query\"\n              value = {query}\n              onChange={(e) => {setQuery(e.target.value)}}\n            />\n          </Form.Group>\n      <Form.Group size=\"lg\" controlID=\"user\">\n        <Form.Label>Select Username:</Form.Label>\n        <Select options={users} \n                onChange={(e) => {handleUserChange(e.value)}}\n                />\n      </Form.Group>\n        <input type=\"submit\" value=\"submit\"></input>\n      </Form>\n      <div>\n        {questionMap}\n      </div>\n      </div>\n    );\n}","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","\n   \nimport React, { createContext, useState } from \"react\";\n\nexport const ContextAPI = createContext();\n\nexport const CheckboxesProvider = (props) => {\n  const [parsedArray, setParsedArray] = useState([]);\n  const [code1, setCode1] = useState(\"\");\n  const [code2, setCode2] = useState(\"\");\n\n  const [past, setPast] = useState(\"\");\n  const [selectedCodeFragment1, setSelectedCodeFragment1] = useState(\"\");\n  const [selectedCodeFragment2, setSelectedCodeFragment2] = useState(\"\");\n  // const [text, setText] = useState({\n  //   selectedCodeFragment1: \"\",\n  //   selectedCodeFragment2: \"\",\n  // });\n\n  return (\n    <ContextAPI.Provider\n      value={{\n        selectedCodeFragment1,\n        setSelectedCodeFragment1,\n        selectedCodeFragment2,\n        setSelectedCodeFragment2,\n        parsedArray,\n        setParsedArray,\n        past,\n        setPast,\n        code1,\n        code2,\n        setCode1,\n        setCode2,\n      }}\n    >\n      {props.children}\n    </ContextAPI.Provider>\n  );\n};","import React, { useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { ContextAPI } from \"../ContextAPI\";\nimport \"./QuestionPage.css\"\n\nexport default function QuestionPage() {\n  const [username, setusername] = useState(\"\");\n  const [student_id, setStudent_id] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [codeFragment, setCodeFragment] = useState(\"\");\n  const { setPast } = useContext(ContextAPI);\n\n  const { parsedArray, setParsedArray } = useContext(ContextAPI);\n\n  let history = useHistory();\n\n  function validateForm() {\n    return (\n      username.length > 0 &&\n      student_id.length > 0 &&\n      question.length > 0 &&\n      codeFragment.length > 0\n    );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"form submitted\");\n    const ques = { username, student_id, question, codeFragment };\n    const response = await fetch(\n      \"http://104.131.172.9:8080/back-end/question/add\",\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(ques),\n      }\n    );\n    var text = await response.text();\n    var script =\n      '<script language=\"JavaScript\">' +\n      \"function ShowHide(divId) {\" +\n      \"if(document.getElementById(divId).style.display == 'none') {\" +\n      \"document.getElementById(divId).style.display='block';\" +\n      \"} else {\" +\n      \"document.getElementById(divId).style.display = 'none';\" +\n      \"}\" +\n      \"}\" +\n      \"</script>\";\n    var finalText = text.concat(script);\n    setPast(finalText);\n\n    const parser = new DOMParser();\n\n    const doc = parser.parseFromString(finalText, \"text/html\");\n    const parsed2 = doc.getElementsByTagName(\"div\");\n    console.log(parsed2.length);\n    let array = [];\n\n    for (let i = 0; i < parsed2.length; i++) {\n      array[i] = parsed2[i].innerText;\n    }\n    console.log(array.length)\n    setParsedArray(array);\n    console.log(parsedArray);\n\n    // console.log(doc);\n\n    // setPast(finalText);\n    // let array = [];\n\n    // let parsed = $(finalText).find(\"div\").toArray;\n    // console.log(parsed[0]);\n\n    // for (let i = 0; i < parsed.length; i++) {\n    //   array[i] = parsed[i].innerText;\n    //   console.log(array[i]);\n    // }\n    // setParsedArray(array[0]);\n\n    // console.log(array.length);\n    // console.log(array[0]);\n    //setParsedArray(parsedArray.concat(\"My name is Milan\"));\n    //setParsedArray((parsedArray) => [...parsedArray, parsed[0]]);\n\n    //console.log(parsedArray.array[0]);\n    //console.log(parsedArray);\n    //console.log(array.length);\n    //console.log(parsed.length);\n\n    history.push(\"/results\");\n  }\n\n  return (\n    <div className=\"p-3 mb-2 bg-light bg-opacity-20 text-dark\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"ID\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            autoFocus\n            className=\".form-control-sm\"\n            type=\"username\"\n            value={username}\n            onChange={(e) => setusername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"ID\">\n          <Form.Label>Student ID</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"student_id\"\n            value={student_id}\n            onChange={(e) => setStudent_id(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Question</Form.Label>\n          <textarea\n            id=\"question\"\n            className=\"form-control\"\n            type=\"question\"\n            placeholder=\"Type a Question\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"ID\">\n          <Form.Label>Code Fragment</Form.Label>\n          <textarea\n            id=\"codefragment\"\n            className=\"form-control\"\n            type=\"description\"\n            placeholder=\"Enter code fragment\"\n            value={codeFragment}\n            onChange={(e) => setCodeFragment(e.target.value)}\n          />\n        </Form.Group>\n        <Button\n          className=\"btn btn-info m-3\"\n          size=\"lg\"\n          type=\"submit\"\n          disabled={!validateForm()}\n        >\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound text-center\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { ContextAPI } from \"../ContextAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Results() {\n  const { past } = useContext(ContextAPI);\n\n  const { setCode1 } = useContext(ContextAPI);\n  const { setCode2 } = useContext(ContextAPI);\n  let history = useHistory();\n  const { selectedCodeFragment1, setSelectedCodeFragment1 } =\n    useContext(ContextAPI);\n  const { selectedCodeFragment2, setSelectedCodeFragment2 } =\n    useContext(ContextAPI);\n  const { parsedArray } = useContext(ContextAPI);\n\n \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setCode1(parsedArray[selectedCodeFragment1 - 1]);\n    setCode2(parsedArray[selectedCodeFragment2 - 1]);\n\n\n    history.push(\"/hook\");\n  }\n\n  return (\n    <div>\n      <div dangerouslySetInnerHTML={{ __html: past }} />\n      <h1>Please Enter the code Fragment Number you would like to compare:</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\">\n          <Form.Label>Code Fragment Number</Form.Label>\n          <textarea\n            autoFocus\n            type=\"text\"\n            className=\"form-control\"\n            onChange={(e) => setSelectedCodeFragment1(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group size=\"lg\">\n          <Form.Label>Code Fragment Number </Form.Label>\n\n          <textarea\n            autoFocus\n            type=\"text\"\n            className=\"form-control\"\n            onChange={(e) => setSelectedCodeFragment2(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button className=\"btn btn-info m-3\" size=\"lg\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport \"react-gh-like-diff/dist/css/diff2html.min.css\";\nimport ReactDiffViewer from \"react-diff-viewer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ContextAPI } from \"../ContextAPI\";\n\nfunction Hook() {\n  const { code1 } = useContext(ContextAPI);\n  const { code2 } = useContext(ContextAPI);\n\n  return (\n    <div>\n      <ReactDiffViewer\n        oldValue={code1}\n        newValue={code2}\n        splitView={true}\n      />\n    </div>\n  );\n}\n\nexport default Hook;\n","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Preferences from \"./components/Preferences\";\nimport Question from \"./components/QuestionPage\";\nimport NotFound from \"./components/NotFound\";\nimport Results from \"./components/Results\";\nimport { CheckboxesProvider } from \"./ContextAPI\";\nimport Hook from \"./components/Hook\";\n\nfunction App() {\n\n  //Dummied out login functionality\n\n  //const { token, setToken } = useToken();\n\n  //if (!token) {\n  //  return <Login setToken={setToken} />; //If not logged in, shows this page until successful login\n  //}\n  //Add route path to add new page to application\n  //If improper route is specified in URL, returns 404 error page\n\n  //Need better solution for logout button but it works for now\n  return (\n    <div className=\"App container py-3\">\n      <CheckboxesProvider>\n        <BrowserRouter>\n          <Navbar collapseOnSelect bg=\"light\" expand=\"md\" className=\"mb-3\">\n            <LinkContainer to=\"/dashboard\">\n              <Navbar.Brand>CryptoTutor</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle />\n            <Navbar.Collapse>\n              <Nav activeKey={window.location.pathname}>\n                <LinkContainer to=\"/dashboard\">\n                  <Nav.Link>Search Questions</Nav.Link>\n                </LinkContainer>\n                <LinkContainer to=\"/questionpage\">\n                  <Nav.Link>Ask Question</Nav.Link>\n                </LinkContainer>\n                <LinkContainer to=\"/\">\n                  <Nav.Link\n                    onClick={() => {\n                      localStorage.clear();\n                      window.location.reload(false);\n                    }}\n                  >\n                    Log Out\n                  </Nav.Link>\n                </LinkContainer>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/preferences\">\n              <Preferences />\n            </Route>\n            <Route path=\"/questionpage\">\n              <Question />\n            </Route>\n            <Route path=\"/hook\">\n              <Hook />\n            </Route>\n            <Route path=\"/results\">\n              <Results />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </CheckboxesProvider>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n//import pull from \"./test.html\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n//const root = document.getElementById('test.html');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}