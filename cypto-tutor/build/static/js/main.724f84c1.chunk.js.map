{"version":3,"sources":["components/DisplayQuestions.js","components/Dashboard.js","components/Preferences.js","ContextAPI.js","components/QuestionPage.js","components/NotFound.js","components/Results.js","components/Hook.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayQuestions","props","style","border","width","for","id","question","username","size","dateTime","codeFragment","Dashboard","useState","users","setUsers","setUsername","query","setQuery","questions","setQuestions","questionMap","setQuestionMap","event","a","preventDefault","data","FormData","append","fetch","method","body","response","json","pulledQuestions","map","test","tmpArray","value","label","i","length","push","useEffect","pullUsers","className","Form","onSubmit","Group","controlID","Label","type","placeholder","onChange","e","target","options","Button","Preferences","ContextAPI","createContext","CheckboxesProvider","parsedArray","setParsedArray","code1","setCode1","code2","setCode2","past","setPast","selectedCodeFragment1","setSelectedCodeFragment1","selectedCodeFragment2","setSelectedCodeFragment2","Provider","children","QuestionPage","setusername","student_id","setStudent_id","setQuestion","setCodeFragment","useContext","history","useHistory","console","log","ques","headers","JSON","stringify","text","finalText","concat","parser","DOMParser","doc","parseFromString","parsed2","getElementsByTagName","array","innerText","controlId","Control","autoFocus","disabled","NotFound","Results","resize","overflow","dangerouslySetInnerHTML","__html","Hook","oldValue","newValue","splitView","App","Helmet","Navbar","collapseOnSelect","to","Brand","Toggle","Collapse","Nav","Link","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.724f84c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./DisplayQuestions.css\"\r\n\r\nexport default function DisplayQuestions(props) {\r\n\r\n    return (\r\n        <div style={{border: \"3px solid black\",\r\n                     width: \"40%\"}}>\r\n            <label for=\"username\">Username:</label>\r\n            <div id=\"username\">\r\n                {props.question.username}\r\n            </div>\r\n            <hr size=\"4\"/>\r\n            <label for=\"dateTime\">Date and Time of Submission:</label>\r\n            <div id=\"dateTime\">\r\n                {props.question.dateTime}\r\n            </div>\r\n            <hr size=\"4\"/>\r\n            <label for=\"question\">Question:</label>\r\n            <div id=\"question\">\r\n                <pre>{props.question.question}</pre>\r\n            </div>\r\n            <hr size=\"4\"/>\r\n            <label for=\"codeFragment\">Code Fragment:</label>\r\n            <div id=\"codeFragment\">\r\n                <pre>{props.question.codeFragment}</pre>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import \"./Dashboard.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Select from \"react-select\";\r\nimport DisplayQuestions from \"./DisplayQuestions\";\r\n\r\nexport default function Dashboard() {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [questionMap, setQuestionMap] = useState();\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"query\", query);\r\n    data.append(\"user\", username);\r\n    const response = await fetch(\"http://104.131.172.9:8080/back-end/question/getFilteredQuestions\", {\r\n      method: \"POST\",\r\n      body: data\r\n    });\r\n    const pulledQuestions = await response.json();\r\n    setQuestions(pulledQuestions);\r\n    setQuestionMap(questions.map(question => <DisplayQuestions question={question} />));\r\n\r\n\r\n  }\r\n\r\n  async function pullUsers(){\r\n    const response = await fetch(\"http://104.131.172.9:8080/users-test/user/getStudents\");\r\n    const test = await response.json();\r\n    let tmpArray = [{value: \"\", label:\"None\"}];\r\n    for (var i = 0; i < test.length; i++) {\r\n      tmpArray.push({value: test[i], label: test[i]});\r\n    }\r\n    setUsers(tmpArray);\r\n  }\r\n  //fetch the array of users when the component is loaded.\r\n  useEffect(() => {\r\n    pullUsers();\r\n  })\r\n\r\n  function handleUserChange(value) {\r\n    setUsername(value);\r\n  }\r\n\r\n    return(\r\n      <div key=\"html\" className=\"p-3 mb-2 bg-light bg-opacity-20 text-dark\">\r\n      <h4 key=\"heading\" className=\"h4\"> Search Questions </h4>\r\n      <Form onSubmit = {handleSubmit}>\r\n        <Form.Group size=\"lg\" controlID=\"query\">\r\n        <Form.Label>Enter Query:</Form.Label>\r\n          <textarea\r\n              id=\"question\"\r\n              className=\"form-control\"\r\n              type=\"question\"\r\n              placeholder=\"Type your query\"\r\n              value = {query}\r\n              onChange={(e) => {setQuery(e.target.value)}}\r\n            />\r\n          </Form.Group>\r\n      <Form.Group size=\"lg\" controlID=\"user\">\r\n        <Form.Label>Select Username:</Form.Label>\r\n        <Select options={users} \r\n                onChange={(e) => {handleUserChange(e.value)}}\r\n                />\r\n      </Form.Group>\r\n        <Button type=\"submit\"\r\n        value=\"submit\"\r\n        className=\"btn btn-info m-3\"\r\n        size=\"lg\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <div>\r\n        {questionMap}\r\n      </div>\r\n      </div>\r\n    );\r\n}","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","\r\n   \r\nimport React, { createContext, useState } from \"react\";\r\n\r\nexport const ContextAPI = createContext();\r\n\r\nexport const CheckboxesProvider = (props) => {\r\n  const [parsedArray, setParsedArray] = useState([]);\r\n  const [code1, setCode1] = useState(\"\");\r\n  const [code2, setCode2] = useState(\"\");\r\n\r\n  const [past, setPast] = useState(\"\");\r\n  const [selectedCodeFragment1, setSelectedCodeFragment1] = useState(\"\");\r\n  const [selectedCodeFragment2, setSelectedCodeFragment2] = useState(\"\");\r\n  // const [text, setText] = useState({\r\n  //   selectedCodeFragment1: \"\",\r\n  //   selectedCodeFragment2: \"\",\r\n  // });\r\n\r\n  return (\r\n    <ContextAPI.Provider\r\n      value={{\r\n        selectedCodeFragment1,\r\n        setSelectedCodeFragment1,\r\n        selectedCodeFragment2,\r\n        setSelectedCodeFragment2,\r\n        parsedArray,\r\n        setParsedArray,\r\n        past,\r\n        setPast,\r\n        code1,\r\n        code2,\r\n        setCode1,\r\n        setCode2,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContextAPI.Provider>\r\n  );\r\n};","import React, { useState, useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ContextAPI } from \"../ContextAPI\";\r\nimport \"./QuestionPage.css\"\r\n\r\nexport default function QuestionPage() {\r\n  const [username, setusername] = useState(\"\");\r\n  const [student_id, setStudent_id] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [codeFragment, setCodeFragment] = useState(\"\");\r\n  const { setPast } = useContext(ContextAPI);\r\n\r\n  const { parsedArray, setParsedArray } = useContext(ContextAPI);\r\n\r\n  let history = useHistory();\r\n\r\n  function validateForm() {\r\n    return (\r\n      username.length > 0 &&\r\n      student_id.length > 0 &&\r\n      question.length > 0 &&\r\n      codeFragment.length > 0\r\n    );\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(\"form submitted\");\r\n    const ques = { username, student_id, question, codeFragment };\r\n    const response = await fetch(\r\n      \"http://104.131.172.9:8080/back-end/question/add\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(ques),\r\n      }\r\n    );\r\n    var text = await response.text();\r\n    var script =\r\n      '<script language=\"JavaScript\">' +\r\n      \"function ShowHide(divId) {\" +\r\n      \"if(document.getElementById(divId).style.display == 'none') {\" +\r\n      \"document.getElementById(divId).style.display='block';\" +\r\n      \"} else {\" +\r\n      \"document.getElementById(divId).style.display = 'none';\" +\r\n      \"}\" +\r\n      \"}\" +\r\n      \"</script>\";\r\n    var finalText = text.concat(script);\r\n    setPast(finalText);\r\n\r\n    const parser = new DOMParser();\r\n\r\n    const doc = parser.parseFromString(finalText, \"text/html\");\r\n    const parsed2 = doc.getElementsByTagName(\"div\");\r\n    console.log(parsed2.length);\r\n    let array = [];\r\n\r\n    for (let i = 0; i < parsed2.length; i++) {\r\n      array[i] = parsed2[i].innerText;\r\n    }\r\n    console.log(array.length)\r\n    setParsedArray(array);\r\n    console.log(parsedArray);\r\n    history.push(\"/results\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-3 mb-2 bg-light bg-opacity-20 text-dark\">\r\n      <h4 key=\"heading\" className=\"h4\"> Ask Questions </h4>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"ID\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            className=\".form-control-sm\"\r\n            type=\"username\"\r\n            placeholder=\"Enter your username\"\r\n            value={username}\r\n            onChange={(e) => setusername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"ID\">\r\n          <Form.Label>Student ID</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"student_id\"\r\n            placeholder=\"Enter your student ID\"\r\n            value={student_id}\r\n            onChange={(e) => setStudent_id(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Question</Form.Label>\r\n          <textarea\r\n            id=\"question\"\r\n            className=\"form-control\"\r\n            type=\"question\"\r\n            placeholder=\"Enter your question\"\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"ID\">\r\n          <Form.Label>Code Fragment</Form.Label>\r\n          <textarea\r\n            id=\"codefragment\"\r\n            className=\"form-control\"\r\n            type=\"description\"\r\n            placeholder=\"Enter a code fragment\"\r\n            value={codeFragment}\r\n            onChange={(e) => setCodeFragment(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          className=\"btn btn-info m-3\"\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          disabled={!validateForm()}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound text-center\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\r\nimport { ContextAPI } from \"../ContextAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Results.css\";\r\n\r\nexport default function Results() {\r\n  const { past } = useContext(ContextAPI);\r\n\r\n  const { setCode1 } = useContext(ContextAPI);\r\n  const { setCode2 } = useContext(ContextAPI);\r\n  let history = useHistory();\r\n  const { selectedCodeFragment1, setSelectedCodeFragment1 } =\r\n    useContext(ContextAPI);\r\n  const { selectedCodeFragment2, setSelectedCodeFragment2 } =\r\n    useContext(ContextAPI);\r\n  const { parsedArray } = useContext(ContextAPI);\r\n\r\n \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setCode1(parsedArray[selectedCodeFragment1 - 1]);\r\n    setCode2(parsedArray[selectedCodeFragment2 - 1]);\r\n\r\n\r\n    history.push(\"/hook\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-3 mb-2 bg-light bg-opacity-20 text-dark\" style={{resize: \"both\", overflow: \"auto\"}}>\r\n      <h2 className=\"h2\">Results</h2>\r\n      <div dangerouslySetInnerHTML={{ __html: past }} />\r\n      <h2 className=\"h2\">Choose two code fragments to compare:</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\">\r\n          <Form.Label>Code Fragment Number</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onChange={(e) => setSelectedCodeFragment1(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group size=\"lg\">\r\n          <Form.Label>Code Fragment Number </Form.Label>\r\n\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onChange={(e) => setSelectedCodeFragment2(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button className=\"btn btn-info m-3\" size=\"lg\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"react-gh-like-diff/dist/css/diff2html.min.css\";\r\nimport ReactDiffViewer from \"react-diff-viewer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ContextAPI } from \"../ContextAPI\";\r\n\r\nfunction Hook() {\r\n  const { code1 } = useContext(ContextAPI);\r\n  const { code2 } = useContext(ContextAPI);\r\n\r\n  return (\r\n    <div>\r\n      <ReactDiffViewer\r\n        oldValue={code1}\r\n        newValue={code2}\r\n        splitView={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hook;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Preferences from \"./components/Preferences\";\r\nimport Question from \"./components/QuestionPage\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Results from \"./components/Results\";\r\nimport { CheckboxesProvider } from \"./ContextAPI\";\r\nimport Hook from \"./components/Hook\";\r\nimport {Helmet} from 'react-helmet';\r\n\r\nfunction App() {\r\n\r\n  //Dummied out login functionality\r\n\r\n  //const { token, setToken } = useToken();\r\n\r\n  //if (!token) {\r\n  //  return <Login setToken={setToken} />; //If not logged in, shows this page until successful login\r\n  //}\r\n  //Add route path to add new page to application\r\n  //If improper route is specified in URL, returns 404 error page\r\n\r\n  //Need better solution for logout button but it works for now\r\n  return (\r\n    <div className=\"container\">\r\n      <Helmet>\r\n        <style>{'body { background-color: rgb(213, 213, 213); }'}</style>\r\n      </Helmet>\r\n      <CheckboxesProvider>\r\n        <BrowserRouter>\r\n          <Navbar collapseOnSelect>\r\n            <LinkContainer to=\"/dashboard\">\r\n              <Navbar.Brand className=\"test\">📖CryptoTutor</Navbar.Brand>\r\n            </LinkContainer>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse>\r\n              <Nav>\r\n                <LinkContainer to=\"/dashboard\">\r\n                  <Nav.Link>🔍Search Questions</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/questionpage\">\r\n                  <Nav.Link>❓Ask Question</Nav.Link>\r\n                </LinkContainer>\r\n                {/*<LinkContainer to=\"/\">\r\n                  <Nav.Link\r\n                    onClick={() => {\r\n                      localStorage.clear();\r\n                      window.location.reload(false);\r\n                    }}\r\n                  >\r\n                    Log Out\r\n                  </Nav.Link>\r\n                  </LinkContainer>*/}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Switch>\r\n            <Route path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route path=\"/preferences\">\r\n              <Preferences />\r\n            </Route>\r\n            <Route path=\"/questionpage\">\r\n              <Question />\r\n            </Route>\r\n            <Route path=\"/hook\">\r\n              <Hook />\r\n            </Route>\r\n            <Route path=\"/results\">\r\n              <Results />\r\n            </Route>\r\n            <Route>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </CheckboxesProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n//import pull from \"./test.html\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n//const root = document.getElementById('test.html');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}