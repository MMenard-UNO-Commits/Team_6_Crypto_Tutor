{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","studentName","studentID","question","description","handleSubmit","e","preventDefault","alert","window","location","console","log","className","name","value","this","onChange","event","setState","target","placeholder","rows","onClick","type","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIMA,E,4MACJC,MAAQ,CACNC,YAAa,GACbC,UAAW,GACXC,SAAU,GACVC,YAAa,I,EAYfC,aAAe,SAACC,GACdA,EAAEC,iBAIFC,MAAM,gCAENC,OAAOC,SAAW,wCAClBC,QAAQC,IAAI,EAAKZ,MAAMC,aACvBU,QAAQC,IAAI,EAAKZ,MAAME,WACvBS,QAAQC,IAAI,EAAKZ,MAAMG,UACvBQ,QAAQC,IAAI,EAAKZ,MAAMI,c,4CAEzB,WAAU,IAAD,OACP,OACE,sBAAKS,UAAU,4CAAf,UACE,iDACA,uBAAMA,UAAU,QAAhB,UACE,qCACE,iDACA,uBACA,uBACEA,UAAU,mBACVC,KAAK,OACLC,MAAOC,KAAKhB,MAAMC,YAClBgB,SAAU,SAACC,GAAD,OACR,EAAKC,SAAS,CAAElB,YAAaiB,EAAME,OAAOL,SAE5CM,YAAY,cAEd,uBACA,+CACA,uBACA,uBACER,UAAU,uBACVC,KAAK,KACLC,MAAOC,KAAKhB,MAAME,UAClBe,SAAU,SAACC,GAAD,OACR,EAAKC,SAAS,CAAEjB,UAAWgB,EAAME,OAAOL,SAE1CM,YAAY,YAEd,uBACA,6CACA,0BACER,UAAU,eACVS,KAAK,IACLR,KAAK,WACLC,MAAOC,KAAKhB,MAAMG,SAClBc,SAAU,SAACC,GAAD,OACR,EAAKC,SAAS,CAAEhB,SAAUe,EAAME,OAAOL,SAEzCM,YAAY,oBAEd,uBACA,gDACA,0BACER,UAAU,eACVC,KAAK,cACLQ,KAAK,IACLP,MAAOC,KAAKhB,MAAMI,YAClBa,SAAU,SAACC,GAAD,OACR,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOL,SAE5CM,YAAY,6BAGhB,wBACEE,QAASP,KAAKX,aACdmB,KAAK,SACLX,UAAU,8BAHZ,8B,GApFQY,aAiGH1B,ICzFA2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCGdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48df47ab.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\n//import Questionform from \"./components/questionform\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    studentName: \"\",\r\n    studentID: \"\",\r\n    question: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  /*handleAdd = async (e) => {\r\n    await this.setState({\r\n      studdentName: e.target.value,\r\n      studentID: e.target.value,\r\n      question: e.target.value,\r\n      description: e.target.value,\r\n    });\r\n  };\r\n*/\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //TODO: ALl the values of the input field are stored in the variable, \\\r\n    //now they need to be processed in the backend\r\n    alert(\"Forms submitted successfully\");\r\n  \r\n    window.location = \"http://localhost:80/learnphp/Pull.php\";\r\n    console.log(this.state.studentName);\r\n    console.log(this.state.studentID);\r\n    console.log(this.state.question);\r\n    console.log(this.state.description);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"p-3 mb-2 bg-light bg-opacity-50 text-dark\">\r\n        <h1>Submit Question</h1>\r\n        <form className=\"forms\">\r\n          <fieldset>\r\n            <label>Student Name</label>\r\n            <br />\r\n            <input\r\n              className=\".form-control-sm\"\r\n              name=\"name\"\r\n              value={this.state.studentName}\r\n              onChange={(event) =>\r\n                this.setState({ studentName: event.target.value })\r\n              }\r\n              placeholder=\"Your name\"\r\n            />\r\n            <br />\r\n            <label>Student ID</label>\r\n            <br/>\r\n            <input\r\n              className=\".form-control-sm m-1\"\r\n              name=\"id\"\r\n              value={this.state.studentID}\r\n              onChange={(event) =>\r\n                this.setState({ studentID: event.target.value })\r\n              }\r\n              placeholder=\"Your ID\"\r\n            />\r\n            <br />\r\n            <label>Question</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              rows=\"7\"\r\n              name=\"question\"\r\n              value={this.state.question}\r\n              onChange={(event) =>\r\n                this.setState({ question: event.target.value })\r\n              }\r\n              placeholder=\"Type a Question\"\r\n            />\r\n            <br />\r\n            <label>Description</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              rows=\"7\"\r\n              value={this.state.description}\r\n              onChange={(event) =>\r\n                this.setState({ description: event.target.value })\r\n              }\r\n              placeholder=\"Type a code fragments\"\r\n            />\r\n          </fieldset>\r\n          <button\r\n            onClick={this.handleSubmit}\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-success m-3\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n//import pull from \"./test.html\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n//const root = document.getElementById('test.html');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />,\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}